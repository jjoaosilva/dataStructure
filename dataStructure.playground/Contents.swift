import UIKit

//var list = LinkedList()
//list.count()
//list.append(value: 1)
//list.count()
//list.append(value: 2)
//list.count()
//list.append(value: 3)
//print(list.view())
//try list.remove(position: 2)
//print(list.view())

var queue = LinkedQueue()
queue.count()
queue.push(value: 1)
queue.count()
queue.push(value: 2)
queue.count()
queue.push(value: 3)
print(queue.view())
try _ = queue.pop()
print(queue.view())
try _ = queue.pop()
print(queue.view())
try _ = queue.pop()
print(queue.view())

var stack = LinkedStack()
stack.count()
stack.push(value: 1)
stack.count()
stack.push(value: 2)
stack.count()
stack.push(value: 3)
print(stack.view())
try _ = stack.pop()
print(stack.view())
try _ = stack.pop()
print(stack.view())
try _ = stack.pop()
print(stack.view())
